# =============================================
# üß™ lazydocker config for Podman
# =============================================

gui:
  scrollHeight: 3
  language: "auto"
  border: "single"
  theme:
    activeBorderColor:
      - "#00ffaa"
      - bold
    inactiveBorderColor:
      - "#666666"
    selectedLineBgColor:
      - "#2a2a2a"
    optionsTextColor:
      - "#00ccff"
  returnImmediately: true
  wrapMainPanel: true
  sidePanelWidth: 0.36
  showBottomLine: true
  expandFocusedSidePanel: true
  screenMode: "normal"
  containerStatusHealthStyle: "short"
  showAllContainers: true
  legacySortContainers: false

logs:
  timestamps: true
  since: '20m'
  tail: '300'

# ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
# ‚îÇ üîß PODMAN MODE: Pure Podman (no Compose)     ‚îÇ
# ‚îÇ ‚úÖ DEFAULT ‚Äî works out of the box            ‚îÇ
# ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
commandTemplates:
  # Using pure Podman (no Compose)
  dockerCompose: podman
  restartService: ''
  up: ''
  down: ''
  downWithVolumes: ''
  upService: ''
  startService: '{{ .DockerCompose }} start {{ .Service.Name }}'
  stopService: '{{ .DockerCompose }} stop {{ .Service.Name }}'
  serviceLogs: '{{ .DockerCompose }} logs --since=20m --follow {{ .Service.Name }}'
  viewServiceLogs: '{{ .DockerCompose }} logs --follow {{ .Service.Name }}'
  rebuildService: ''
  recreateService: ''
  allLogs: '{{ .DockerCompose }} logs --tail=300 --follow'
  viewAllLogs: '{{ .DockerCompose }} logs'
  dockerComposeConfig: ''
  # üëá This hides the "Services" panel (recommended for pure Podman)
  checkDockerComposeConfig: 'false'
  serviceTop: '{{ .DockerCompose }} top {{ .Service.Name }}'

# ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
# ‚îÇ üöß OPTIONAL: Enable when using podman compose ‚îÇ
# ‚îÇ ‚û§ To activate:                               ‚îÇ
# ‚îÇ   1. COMMENT OUT the block above             ‚îÇ
# ‚îÇ   2. UNCOMMENT the block below               ‚îÇ
# ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
# commandTemplates:
#   # Using built-in `podman compose` (Podman v4.0+)
#   dockerCompose: podman compose
#   restartService: '{{ .DockerCompose }} restart {{ .Service.Name }}'
#   up: '{{ .DockerCompose }} up -d'
#   down: '{{ .DockerCompose }} down'
#   downWithVolumes: '{{ .DockerCompose }} down --volumes'
#   upService: '{{ .DockerCompose }} up -d {{ .Service.Name }}'
#   startService: '{{ .DockerCompose }} start {{ .Service.Name }}'
#   stopService: '{{ .DockerCompose }} stop {{ .Service.Name }}'
#   serviceLogs: '{{ .DockerCompose }} logs --since=20m --follow {{ .Service.Name }}'
#   viewServiceLogs: '{{ .DockerCompose }} logs --follow {{ .Service.Name }}'
#   rebuildService: '{{ .DockerCompose }} up -d --build {{ .Service.Name }}'
#   recreateService: '{{ .DockerCompose }} up -d --force-recreate {{ .Service.Name }}'
#   allLogs: '{{ .DockerCompose }} logs --tail=300 --follow'
#   viewAllLogs: '{{ .DockerCompose }} logs'
#   dockerComposeConfig: '{{ .DockerCompose }} config'
#   # üëá This ENABLES the "Services" panel
#   checkDockerComposeConfig: '{{ .DockerCompose }} config --quiet'
#   serviceTop: '{{ .DockerCompose }} top {{ .Service.Name }}'

# üí° Custom commands (work in both modes)
customCommands:
  containers:
    - name: "‚ñ∂Ô∏è Shell into container"
      attach: true
      shell: true
      command: 'podman exec -it {{ .Container.ID }} /bin/sh'
    - name: "üìù View full logs"
      attach: false
      command: 'podman logs {{ .Container.ID }}'
    - name: "üîç Inspect (pretty JSON)"
      attach: false
      command: 'podman inspect {{ .Container.ID }} | jq .'
    - name: "üåê Show IP"
      attach: false
      command: 'podman inspect {{ .Container.ID }} --format "{{ .NetworkSettings.IPAddress }}"'

  images:
    - name: "üßπ Prune unused images"
      attach: false
      command: 'podman image prune -f'

# üßπ Bulk commands (safe for beginners)
bulkCommands:
  containers:
    - name: "‚èπÔ∏è Stop all"
      attach: false
      command: 'podman stop -a'
    - name: "üóëÔ∏è Remove stopped"
      attach: false
      command: 'podman rm $(podman ps -aq --filter status=exited) 2>/dev/null || true'
  images:
    - name: "üßπ Prune dangling"
      attach: false
      command: 'podman image prune -f'

# üñ•Ô∏è OS settings
oS:
  # Linux:
  openCommand: xdg-open {{filename}}
  openLinkCommand: xdg-open {{link}}
  # macOS? ‚Üí use: open {{filename}} / open {{link}}

stats:
  maxDuration: 5m
  graphs:
    - caption: "CPU (%)"
      statPath: DerivedStats.CPUPercentage
      color: cyan
      min: 0
      max: 100
      minType: "static"
      maxType: "static"
      height: 2
    - caption: "Memory (%)"
      statPath: DerivedStats.MemoryPercentage
      color: magenta
      min: 0
      max: 100
      minType: "static"
      maxType: "static"
      height: 2

replacements:
  imageNamePrefixes:
    "localhost/": ""
    "docker.io/library/": ""
    "docker.io/": ""
